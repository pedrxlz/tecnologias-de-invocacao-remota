# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import service_pb2 as service__pb2

GRPC_GENERATED_VERSION = '1.68.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class MusicServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUsers = channel.unary_unary(
                '/service.MusicService/GetUsers',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=service__pb2.UserList.FromString,
                _registered_method=True)
        self.GetPlaylists = channel.unary_unary(
                '/service.MusicService/GetPlaylists',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=service__pb2.PlaylistList.FromString,
                _registered_method=True)
        self.GetSongs = channel.unary_unary(
                '/service.MusicService/GetSongs',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=service__pb2.SongList.FromString,
                _registered_method=True)
        self.GetUserPlaylists = channel.unary_unary(
                '/service.MusicService/GetUserPlaylists',
                request_serializer=service__pb2.UserRequest.SerializeToString,
                response_deserializer=service__pb2.PlaylistList.FromString,
                _registered_method=True)
        self.GetPlaylistSongs = channel.unary_unary(
                '/service.MusicService/GetPlaylistSongs',
                request_serializer=service__pb2.PlaylistRequest.SerializeToString,
                response_deserializer=service__pb2.SongList.FromString,
                _registered_method=True)
        self.GetPlaylistsContainingSong = channel.unary_unary(
                '/service.MusicService/GetPlaylistsContainingSong',
                request_serializer=service__pb2.SongRequest.SerializeToString,
                response_deserializer=service__pb2.PlaylistList.FromString,
                _registered_method=True)


class MusicServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlaylists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSongs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserPlaylists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlaylistSongs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlaylistsContainingSong(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MusicServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUsers,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=service__pb2.UserList.SerializeToString,
            ),
            'GetPlaylists': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlaylists,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=service__pb2.PlaylistList.SerializeToString,
            ),
            'GetSongs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSongs,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=service__pb2.SongList.SerializeToString,
            ),
            'GetUserPlaylists': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserPlaylists,
                    request_deserializer=service__pb2.UserRequest.FromString,
                    response_serializer=service__pb2.PlaylistList.SerializeToString,
            ),
            'GetPlaylistSongs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlaylistSongs,
                    request_deserializer=service__pb2.PlaylistRequest.FromString,
                    response_serializer=service__pb2.SongList.SerializeToString,
            ),
            'GetPlaylistsContainingSong': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlaylistsContainingSong,
                    request_deserializer=service__pb2.SongRequest.FromString,
                    response_serializer=service__pb2.PlaylistList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'service.MusicService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('service.MusicService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class MusicService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/service.MusicService/GetUsers',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            service__pb2.UserList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlaylists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/service.MusicService/GetPlaylists',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            service__pb2.PlaylistList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSongs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/service.MusicService/GetSongs',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            service__pb2.SongList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserPlaylists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/service.MusicService/GetUserPlaylists',
            service__pb2.UserRequest.SerializeToString,
            service__pb2.PlaylistList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlaylistSongs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/service.MusicService/GetPlaylistSongs',
            service__pb2.PlaylistRequest.SerializeToString,
            service__pb2.SongList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlaylistsContainingSong(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/service.MusicService/GetPlaylistsContainingSong',
            service__pb2.SongRequest.SerializeToString,
            service__pb2.PlaylistList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
